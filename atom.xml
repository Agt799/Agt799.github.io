<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Agt Wiki</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-03T12:44:02.679Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Agt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C1&amp;2 算法基础</title>
    <link href="http://yoursite.com/2018/08/03/Note/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2018/08/03/Note/算法导论/算法基础/</id>
    <published>2018-08-03T11:28:23.000Z</published>
    <updated>2018-08-03T12:44:02.679Z</updated>
    
    <content type="html"><![CDATA[<h2 id="算法的定义"><a href="#算法的定义" class="headerlink" title="算法的定义"></a>算法的定义</h2><ul><li>非形式地说，算法就是把输入转换为输出的计算步骤的一个序列</li><li>或是说算法描述了一个特定的计算过程，该过程实现了某个计算问题所期望的输入/输出关系</li></ul><h3 id="NP完全问题"><a href="#NP完全问题" class="headerlink" title="NP完全问题"></a>NP完全问题</h3><p>NP完全(NPC或NP-Complete)问题，是NP（非决定性多项式时间）中最难的决定性问题。</p><blockquote><p>可以在决定型依序机器上（例如图灵机）以多项式时间解决的决定性问题，其属于的复杂度类被称为P。</p><p>可以在多项式时间验证答案的决定性问题称为NP。</p><p>而NP也是可以在非确定型图灵机以多项式时间解决的问题（NP两字为Non-deterministic Polynomial的缩写）。</p></blockquote><p><a href="https://zh.wikipedia.org/wiki/%E5%A4%9A%E9%A0%85%E5%BC%8F%E6%99%82%E9%96%93" target="_blank" rel="noopener">多项式时间 wikipedia</a></p><p>NPC问题具有以下特性：</p><ol><li>是否存在有效算法是未知的</li><li>若果一个NPC问题存在有效算法，那么所有NPC问题都存在有效算法（因为NPC问题之间可以通过<strong>转换输入/输出</strong>来进行归约）</li></ol><hr><h2 id="算法基础"><a href="#算法基础" class="headerlink" title="算法基础"></a>算法基础</h2><h3 id="循环不变式-loop-invariant"><a href="#循环不变式-loop-invariant" class="headerlink" title="循环不变式  loop invariant"></a>循环不变式  loop invariant</h3><p>使用类似数学归纳法的思想，用来帮助我们理解算法的正确性</p><p>三条性质：</p><ol><li>初始化：循环的第一次迭代之前，它为真</li><li>保持:如果循环的某次迭代之前它为真，那么下次迭代之前它仍为真</li><li>终止：在循环终止的时候，不变式所处的状态有利于算法正确性的证明</li></ol><h3 id="增长量级"><a href="#增长量级" class="headerlink" title="增长量级"></a>增长量级</h3><p>若算法的运行时间估算表示为<code>an^2+bn+c</code></p><p>我们做出更简化的抽象：只考虑对事件影响最大的项，如这里的<code>an^2</code>，因为在这里感兴趣的是运行事件的<strong>增长率</strong>或<strong>增长量级</strong>，所以进一步化简为<code>O(n^2)</code>(此处应为’theta’符号)</p><h2 id="分治法"><a href="#分治法" class="headerlink" title="分治法"></a>分治法</h2><blockquote><p><strong>分治法思想</strong>：将原问题分解为几个规模较小但类似与原问题的子问题，递归地求解这些子问题，然后再合并这些子问题地解来简历原问题的解</p></blockquote><p>递归时的三个步骤：</p><ol><li>分解原问题</li><li>递归地解决各子问题，若子问题的规模足够小则直接求解</li><li>合并这些子问题的解成原问题的解</li></ol><hr><h2 id="Tips-of-CLRS"><a href="#Tips-of-CLRS" class="headerlink" title="Tips of (CLRS)"></a>Tips of (CLRS)</h2><ul><li>伪代码<ul><li>书中的循环计数器在退出循环后保留原值</li><li>布尔运算符都是短路的</li><li><code>NIL</code>用作不指向任何对象的指针的特殊值</li></ul></li><li>分析算法中假定一种通用的单处理器模型–随机访问处理器(Random-access machine,RAM)，该模型没有并发操作</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;算法的定义&quot;&gt;&lt;a href=&quot;#算法的定义&quot; class=&quot;headerlink&quot; title=&quot;算法的定义&quot;&gt;&lt;/a&gt;算法的定义&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;非形式地说，算法就是把输入转换为输出的计算步骤的一个序列&lt;/li&gt;
&lt;li&gt;或是说算法描述了一个特定的计
      
    
    </summary>
    
      <category term="Note" scheme="http://yoursite.com/categories/Note/"/>
    
      <category term="算法导论" scheme="http://yoursite.com/categories/Note/%E7%AE%97%E6%B3%95%E5%AF%BC%E8%AE%BA/"/>
    
    
      <category term="CLRS" scheme="http://yoursite.com/tags/CLRS/"/>
    
  </entry>
  
  <entry>
    <title>第5章 [BX]和loop指令</title>
    <link href="http://yoursite.com/2018/08/02/Note/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/%E7%AC%AC5%E7%AB%A0%20%5BBX%5D%E5%92%8Cloop%E6%8C%87%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/08/02/Note/汇编语言/第5章 [BX]和loop指令/</id>
    <published>2018-08-02T13:17:30.000Z</published>
    <updated>2018-08-03T04:46:48.286Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用-bx-访问内存地址"><a href="#使用-bx-访问内存地址" class="headerlink" title="使用[bx]访问内存地址"></a>使用[bx]访问内存地址</h2><p>要完整的描述一个内存单元，需要知道：</p><ol><li>内存单元的地址</li><li>内存单元的长度 （或是通过类型推断出长度）</li></ol><h3 id="类型推断长度"><a href="#类型推断长度" class="headerlink" title="类型推断长度"></a>类型推断长度</h3><ul><li>已知段地址默认保存在ds中，所以<code>mov ax,[bx]</code>可以将ds:bx处长度2个字节单元的数据移动到ax里。</li><li>而<code>mov al,[bx]</code>则将同一个起始位置长度1个字节单元的数据移动到al里。</li></ul><hr><h2 id="Loop指令"><a href="#Loop指令" class="headerlink" title="Loop指令"></a>Loop指令</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="meta">assume</span> <span class="built_in">cs</span>:code</span><br><span class="line">code <span class="meta">segment</span></span><br><span class="line">    <span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">mov</span> <span class="built_in">cx</span>,<span class="number">236</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">s:</span>  <span class="keyword">add</span> <span class="built_in">ax</span>,<span class="number">123</span></span><br><span class="line">    <span class="keyword">loop</span> s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">mov</span> <span class="built_in">ax</span>,<span class="number">4c00h</span></span><br><span class="line">    <span class="keyword">int</span> <span class="number">21h</span></span><br><span class="line">code ends</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><code>其中cx内的值为循环次数，s：标识的位置为循环开始地址</code></p><h3 id="执行loop指令的步骤"><a href="#执行loop指令的步骤" class="headerlink" title="执行loop指令的步骤"></a>执行loop指令的步骤</h3><ol><li>cx = cx -1 </li><li>判断cx的值，若不为0则跳转至标号处执行，若为0则向下执行</li></ol><hr><h2 id="安全空间"><a href="#安全空间" class="headerlink" title="安全空间"></a>安全空间</h2><p>在实模式下运行的设备并没有对硬件系统进行安全性检查的功能，所以可能出现系统级的数据或是程序被用户的汇编程序修改的问题，所以需要避开使用不安全的地址范围</p><ul><li>在Dos下，一般0:200~0:2ff的空间是可以安全使用的</li></ul><hr><h2 id="Tip"><a href="#Tip" class="headerlink" title="Tip"></a>Tip</h2><ul><li>在汇编源程序中，数据不能以字母开头，要在数据前补一个’0’ ，  <code>A000h</code>在源程序中要写为<code>0A000h</code></li><li>地址表示法在debug与源程序中的不同<ul><li>指令<code>mov ax,[0]</code>在<code>Debug</code>工具上表示将<code>ds:0</code>地址的数据送入ax寄存器</li><li>而在汇编源程序中被识别为<code>mov ax,0</code>，解决方式：使用显式地给出段寄存器，<code>mov ax,ds:[0]</code>,前缀<code>ds</code>在这里被称为<strong>段前缀</strong></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用-bx-访问内存地址&quot;&gt;&lt;a href=&quot;#使用-bx-访问内存地址&quot; class=&quot;headerlink&quot; title=&quot;使用[bx]访问内存地址&quot;&gt;&lt;/a&gt;使用[bx]访问内存地址&lt;/h2&gt;&lt;p&gt;要完整的描述一个内存单元，需要知道：&lt;/p&gt;
&lt;ol&gt;
&lt;l
      
    
    </summary>
    
      <category term="Note" scheme="http://yoursite.com/categories/Note/"/>
    
      <category term="汇编语言" scheme="http://yoursite.com/categories/Note/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="汇编" scheme="http://yoursite.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>数据库主键的选择</title>
    <link href="http://yoursite.com/2018/07/23/Theory/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BB%E9%94%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    <id>http://yoursite.com/2018/07/23/Theory/数据库主键类型的选择/</id>
    <published>2018-07-23T01:44:01.000Z</published>
    <updated>2018-08-02T13:07:11.513Z</updated>
    
    <content type="html"><![CDATA[<h3 id="主键的作用"><a href="#主键的作用" class="headerlink" title="主键的作用"></a>主键的作用</h3><p>保证了每行数据的唯一性，选择出主键让表达到了数据库标准化<a href="https://zh.wikipedia.org/wiki/%E7%AC%AC%E4%B8%80%E6%AD%A3%E8%A6%8F%E5%8C%96" target="_blank" rel="noopener">第一范式</a></p><h3 id="UUID-Universally-Unique-Identifier-通用唯一识别码"><a href="#UUID-Universally-Unique-Identifier-通用唯一识别码" class="headerlink" title="UUID (Universally Unique Identifier)通用唯一识别码"></a>UUID (Universally Unique Identifier)通用唯一识别码</h3><ul><li>UUID是一种软件架构的标准</li><li>由一组32位的16进制数据构成，形式为用连字号把32个数据分为8-4-4-12，故加上‘-’字符一共有36位数，例如<code>123e4567-e89b-12d3-a456-426655440000</code></li><li>使用随机数算法以及巨大的密钥空间保证了UUID极低重复性</li></ul><h2 id="主键的选择"><a href="#主键的选择" class="headerlink" title="主键的选择"></a>主键的选择</h2><ol><li>使用 自增int型 作为主键</li><li>使用 UUID 作为主键</li><li>使用自定义的介于二者之间</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;主键的作用&quot;&gt;&lt;a href=&quot;#主键的作用&quot; class=&quot;headerlink&quot; title=&quot;主键的作用&quot;&gt;&lt;/a&gt;主键的作用&lt;/h3&gt;&lt;p&gt;保证了每行数据的唯一性，选择出主键让表达到了数据库标准化&lt;a href=&quot;https://zh.wikipedia.
      
    
    </summary>
    
      <category term="Theory" scheme="http://yoursite.com/categories/Theory/"/>
    
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>QT Note</title>
    <link href="http://yoursite.com/2018/07/22/Engineer/QT%20note1/"/>
    <id>http://yoursite.com/2018/07/22/Engineer/QT note1/</id>
    <published>2018-07-21T16:15:01.000Z</published>
    <updated>2018-08-02T13:07:09.009Z</updated>
    
    <content type="html"><![CDATA[<h2 id="QT简介"><a href="#QT简介" class="headerlink" title="QT简介"></a>QT简介</h2><p>QT是一个<strong>跨平台</strong>的C++引用程序开发框架  </p><p>定位主要是C++的一个图形库，同时也可用于非GUI开发  </p><ul><li><strong>GUI开发</strong>：由于QT构建的一个中间层，使用QT技术可以让开发人员编写的代码 “ <em>一次编写，处处运行</em> ”,在不同的平台下只需要重新编译即可运行， 并且会根据平台原生的UI风格自动调整程序的UI风格</li><li>非GUI开发：</li></ul><p>Qt使用标准的C++和特殊的代码生成扩展（称为元对象编译器（Meta Object Compiler, QT源代码在(C++编译器)编译前会先经过moc的编译，先生成扩展后的C++源代码，然后再编译链接为二进制运行。</p><p>跨平台的特性：</p><p>## </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;QT简介&quot;&gt;&lt;a href=&quot;#QT简介&quot; class=&quot;headerlink&quot; title=&quot;QT简介&quot;&gt;&lt;/a&gt;QT简介&lt;/h2&gt;&lt;p&gt;QT是一个&lt;strong&gt;跨平台&lt;/strong&gt;的C++引用程序开发框架  &lt;/p&gt;
&lt;p&gt;定位主要是C++的一个图形库，
      
    
    </summary>
    
      <category term="Engineer" scheme="http://yoursite.com/categories/Engineer/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="QT" scheme="http://yoursite.com/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>OpenCV C++环境搭建</title>
    <link href="http://yoursite.com/2018/07/02/Engineer/OpenCV-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/07/02/Engineer/OpenCV-环境搭建/</id>
    <published>2018-07-02T12:19:00.000Z</published>
    <updated>2018-07-23T02:00:04.398Z</updated>
    
    <content type="html"><![CDATA[<p><strong>以下为在Windows系统下配置 C++描述的OpenCV库</strong></p><ol><li>下载OpenCV ：<a href="https://opencv.org/" target="_blank" rel="noopener">https://opencv.org/</a></li><li>运行opencv_version.exe 将OpenCV项目源码以及链接库文件等解压到特定目录</li><li>在系统变量PATH中添加cv的bin目录,如<code>D:\OpenCV\opencv\build\x64\vc15\bin</code><br><em>(配置时需要确定本机上OpenCV所在的目录)</em>   </li><li>配置IDE</li></ol><h2 id="Qt-Creator"><a href="#Qt-Creator" class="headerlink" title="Qt Creator"></a>Qt Creator</h2><p>QT Creator 是一款敏捷&amp;强大的C++ IDE<br>本身用的是C++/QT编写，所以在各平台都可以运行</p><h3 id="在QT-Creator中配置OpenCV3的步骤"><a href="#在QT-Creator中配置OpenCV3的步骤" class="headerlink" title="在QT Creator中配置OpenCV3的步骤"></a>在QT Creator中配置OpenCV3的步骤</h3><ul><li>在Pro文件中添加</li></ul><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#configure for opencv</span></span><br><span class="line">INCLUDEPATH += D:\OpenCV\opencv\build\include</span><br><span class="line">LIBS+=D:\OpenCV\opencv\build\x64\vc15\lib\opencv_world341.lib</span><br><span class="line">LIBS+=D:\OpenCV\opencv\build\x64\vc15\lib\opencv_world341d.lib</span><br></pre></td></tr></table></figure><ul><li>构建Kit选择MSVC版本的<br>  <img src="https://upload-images.jianshu.io/upload_images/12312259-a6ed76a807329b7d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Kit.png"></li></ul><ul><li>运行DEMO，成功<br>  <img src="https://upload-images.jianshu.io/upload_images/12312259-c92ea5617c269c10.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ul><h2 id="Visual-Studio-2017"><a href="#Visual-Studio-2017" class="headerlink" title="Visual Studio 2017"></a>Visual Studio 2017</h2><p>VS–宇宙最强IDE</p><ul><li>调试功能强大</li><li>单元测试很方便</li><li>Live Share等功能很实用</li><li>…</li><li>唯一的缺点就是大</li></ul><h3 id="在Visual-Studio2017中配置OpenCV3"><a href="#在Visual-Studio2017中配置OpenCV3" class="headerlink" title="在Visual Studio2017中配置OpenCV3"></a>在Visual Studio2017中配置OpenCV3</h3><ul><li>C/C++ 附加包含目录<code>D:\OpenCV\opencv\build\include</code> </li><li>链接器 常规 附加库目录 <code>D:\OpenCV\opencv\build\x64\vc15\lib</code>  </li><li>链接器 输入 附加依赖项 <code>opencv_world341d.lib;%(AdditionalDependencies)</code>  </li><li>解决方案平台 X64 （OpenCV在Windows上目前只支持64位）  </li></ul><p><img src="https://upload-images.jianshu.io/upload_images/12312259-a5f147c0fe0f06b8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="测试DEMO"><a href="#测试DEMO" class="headerlink" title="测试DEMO"></a>测试DEMO</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Mat img = imread(<span class="string">"C:\\Users\\Agt\\Desktop\\PIC\\lena.jpg"</span>);</span><br><span class="line">    namedWindow(<span class="string">"image"</span>, WINDOW_NORMAL);</span><br><span class="line">    imshow(<span class="string">"image"</span>, img);</span><br><span class="line">    waitKey(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;以下为在Windows系统下配置 C++描述的OpenCV库&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载OpenCV ：&lt;a href=&quot;https://opencv.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https
      
    
    </summary>
    
      <category term="Engineer" scheme="http://yoursite.com/categories/Engineer/"/>
    
    
      <category term="OpenCV" scheme="http://yoursite.com/tags/OpenCV/"/>
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Simple MarkDown Note</title>
    <link href="http://yoursite.com/2018/05/21/Note/MarkDown%20Note/"/>
    <id>http://yoursite.com/2018/05/21/Note/MarkDown Note/</id>
    <published>2018-05-21T08:52:22.000Z</published>
    <updated>2018-08-02T13:14:47.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h2><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"># 主标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题  </span><br><span class="line">...</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p>#与标题内容之间要有一个空格</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><pre><code>- list1- list2+ list3    + sublist1    + sublist2+ list4</code></pre><ul><li>list1</li><li>list2</li></ul><ul><li>list3<ul><li>sublist1</li><li>sublist2</li></ul></li><li>list4</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><pre><code>1. first    1. 1.1    2. 1.22. second3. third4. fourth</code></pre><ol><li>first<ol><li>1.1</li><li>1.2</li></ol></li><li>second</li><li>third</li><li>fourth</li></ol><h3 id="链接与图片"><a href="#链接与图片" class="headerlink" title="链接与图片"></a>链接与图片</h3><h4 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h4><p><code>[显示文本](链接地址)</code><br><a href="https://agt799.github.io" target="_blank" rel="noopener">AgtWiki</a></p><h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><p><code>![](图片链接地址)</code><br>具体的图片链接地址需要上传到图床上后获得<br><img src="https://upload-images.jianshu.io/upload_images/12312259-78608c0e30409df3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="logo.png"></p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><h4 id="1-三引号-编程语言名称"><a href="#1-三引号-编程语言名称" class="headerlink" title="1.  三引号+编程语言名称"></a>1.  三引号+编程语言名称</h4><p><img src="https://upload-images.jianshu.io/upload_images/12312259-285231168d5305b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>效果：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">内容:</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">tf.session()</span><br></pre></td></tr></table></figure><h4 id="2-Tab缩进法"><a href="#2-Tab缩进法" class="headerlink" title="2.  Tab缩进法"></a>2.  Tab缩进法</h4><p>直接将一段代码全选然后tab缩进</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> DBManager::createConnection()</span><br><span class="line">&#123;   </span><br><span class="line">    QSqlDatabase db = QSqlDatabase::addDatabase(<span class="string">"QSQLITE"</span>);</span><br><span class="line">    db.setDatabaseName(DB_NAME);</span><br><span class="line">    <span class="comment">// this version of SQLite is unable to encrypt </span></span><br><span class="line">    <span class="comment">// so the following two lines are useless</span></span><br><span class="line">    db.setUserName(<span class="string">"sqlite3"</span>);</span><br><span class="line">    db.setPassword(<span class="string">"sqlite"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!db.open())</span><br><span class="line">    &#123;</span><br><span class="line">        qDebug()&lt;&lt;<span class="string">"SQLite didn't want to work : "</span>&lt;&lt;db.lastError().text();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    qDebug()&lt;&lt;<span class="string">"Local database loaded!"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-行内代码块"><a href="#2-行内代码块" class="headerlink" title="2.  行内代码块"></a>2.  行内代码块</h4><p>在行内使用两个   <strong>`</strong>   号</p><p>`print(“i am a single line code”)`</p><p>效果：<code>print(&quot;i am a single line code&quot;)</code></p><h3 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h3><pre><code>**粗体文字!（用两个星号包含）**   </code></pre><p><strong>粗体文字!</strong>    </p><pre><code>*斜体文字(用一个星号包含)* </code></pre><p><em>If you lost the powerful urge to learn, try to regain it</em></p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><pre><code>&gt; as the history goes ...    some man will be immortal </code></pre><p>效果：</p><blockquote><p>as the history goes …<br>some man will be immortal  </p></blockquote><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string"> Tables        </span>|<span class="string"> Are           </span>|<span class="string"> Cool  </span>|<span class="string">Test </span>|</span><br><span class="line">|<span class="string"> ------------- </span>|<span class="string">:-------------:</span>|<span class="string"> -----:</span>|<span class="string">:--- </span>|</span><br><span class="line">|<span class="string"> col 3 is      </span>|<span class="string"> right-aligned </span>|<span class="string"> $1600 </span>|<span class="string">true </span>|</span><br><span class="line">|<span class="string"> col 2 is      </span>|<span class="string"> centered      </span>|<span class="string">   $12 </span>|<span class="string">false</span>|</span><br><span class="line">|<span class="string"> zebra stripes </span>|<span class="string"> are neat      </span>|<span class="string">    $1 </span>|<span class="string">true </span>|</span><br></pre></td></tr></table></figure><p> 效果：</p><table><thead><tr><th>Tables</th><th style="text-align:center">Are</th><th style="text-align:right">Cool</th><th style="text-align:left">Test</th></tr></thead><tbody><tr><td>col 3 is</td><td style="text-align:center">right-aligned</td><td style="text-align:right">$1600</td><td style="text-align:left">true</td></tr><tr><td>col 2 is</td><td style="text-align:center">centered</td><td style="text-align:right">$12</td><td style="text-align:left">false</td></tr><tr><td>zebra stripes</td><td style="text-align:center">are neat</td><td style="text-align:right">$1</td><td style="text-align:left">true</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;分级标题&quot;&gt;&lt;a href=&quot;#分级标题&quot; class=&quot;headerlink&quot; title=&quot;分级标题&quot;&gt;&lt;/a&gt;分级标题&lt;/h2&gt;&lt;figure class=&quot;highlight clean&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="Note" scheme="http://yoursite.com/categories/Note/"/>
    
    
      <category term="MarkDown" scheme="http://yoursite.com/tags/MarkDown/"/>
    
  </entry>
  
</feed>
