{"meta":{"title":"Agt Wiki","subtitle":null,"description":null,"author":"Agt","url":"http://yoursite.com"},"pages":[{"title":"About","date":"2018-05-21T08:30:17.753Z","updated":"2018-05-21T08:30:17.753Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2018-05-21T08:30:17.755Z","updated":"2018-05-21T08:30:17.755Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-05-21T08:30:17.759Z","updated":"2018-05-21T08:30:17.759Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"数据库主键的选择","slug":"数据库主键类型的选择","date":"2018-07-23T01:44:01.000Z","updated":"2018-07-23T02:00:02.817Z","comments":true,"path":"2018/07/23/数据库主键类型的选择/","link":"","permalink":"http://yoursite.com/2018/07/23/数据库主键类型的选择/","excerpt":"","text":"","categories":[{"name":"Theory","slug":"Theory","permalink":"http://yoursite.com/categories/Theory/"}],"tags":[{"name":"数据库","slug":"数据库","permalink":"http://yoursite.com/tags/数据库/"}]},{"title":"QT Note","slug":"QT note1","date":"2018-07-21T16:15:01.000Z","updated":"2018-07-23T02:00:03.670Z","comments":true,"path":"2018/07/22/QT note1/","link":"","permalink":"http://yoursite.com/2018/07/22/QT note1/","excerpt":"","text":"QT简介QT是一个跨平台的C++引用程序开发框架 定位主要是C++的一个图形库，同时也可用于非GUI开发 GUI开发：由于QT构建的一个中间层，使用QT技术可以让开发人员编写的代码 “ 一次编写，处处运行 ”,在不同的平台下只需要重新编译即可运行， 并且会根据平台原生的UI风格自动调整程序的UI风格 非GUI开发： Qt使用标准的C++和特殊的代码生成扩展（称为元对象编译器（Meta Object Compiler, QT源代码在(C++编译器)编译前会先经过moc的编译，先生成扩展后的C++源代码，然后再编译链接为二进制运行。 跨平台的特性： ##","categories":[{"name":"Engineer","slug":"Engineer","permalink":"http://yoursite.com/categories/Engineer/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"QT","slug":"QT","permalink":"http://yoursite.com/tags/QT/"}]},{"title":"C++ Primer Note (Chapter 1)","slug":"c-Primer-Note","date":"2018-07-21T16:00:46.000Z","updated":"2018-07-23T02:00:06.250Z","comments":true,"path":"2018/07/22/c-Primer-Note/","link":"","permalink":"http://yoursite.com/2018/07/22/c-Primer-Note/","excerpt":"","text":"参考资料","categories":[{"name":"Theory","slug":"Theory","permalink":"http://yoursite.com/categories/Theory/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://yoursite.com/tags/c/"}]},{"title":"OpenCV C++环境搭建","slug":"OpenCV-环境搭建","date":"2018-07-02T12:19:00.000Z","updated":"2018-07-23T02:00:04.398Z","comments":true,"path":"2018/07/02/OpenCV-环境搭建/","link":"","permalink":"http://yoursite.com/2018/07/02/OpenCV-环境搭建/","excerpt":"","text":"以下为在Windows系统下配置 C++描述的OpenCV库 下载OpenCV ：https://opencv.org/ 运行opencv_version.exe 将OpenCV项目源码以及链接库文件等解压到特定目录 在系统变量PATH中添加cv的bin目录,如D:\\OpenCV\\opencv\\build\\x64\\vc15\\bin(配置时需要确定本机上OpenCV所在的目录) 配置IDE Qt CreatorQT Creator 是一款敏捷&amp;强大的C++ IDE本身用的是C++/QT编写，所以在各平台都可以运行 在QT Creator中配置OpenCV3的步骤 在Pro文件中添加 #configure for opencvINCLUDEPATH += D:\\OpenCV\\opencv\\build\\includeLIBS+=D:\\OpenCV\\opencv\\build\\x64\\vc15\\lib\\opencv_world341.libLIBS+=D:\\OpenCV\\opencv\\build\\x64\\vc15\\lib\\opencv_world341d.lib 构建Kit选择MSVC版本的 运行DEMO，成功 Visual Studio 2017VS–宇宙最强IDE 调试功能强大 单元测试很方便 Live Share等功能很实用 … 唯一的缺点就是大 在Visual Studio2017中配置OpenCV3 C/C++ 附加包含目录D:\\OpenCV\\opencv\\build\\include 链接器 常规 附加库目录 D:\\OpenCV\\opencv\\build\\x64\\vc15\\lib 链接器 输入 附加依赖项 opencv_world341d.lib;%(AdditionalDependencies) 解决方案平台 X64 （OpenCV在Windows上目前只支持64位） 测试DEMO#include&lt;opencv2/opencv.hpp&gt;#include&lt;iostream&gt;using namespace std;using namespace cv;int main()&#123; Mat img = imread(\"C:\\\\Users\\\\Agt\\\\Desktop\\\\PIC\\\\lena.jpg\"); namedWindow(\"image\", WINDOW_NORMAL); imshow(\"image\", img); waitKey(0); return 0;&#125;","categories":[{"name":"Engineer","slug":"Engineer","permalink":"http://yoursite.com/categories/Engineer/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"OpenCV","slug":"OpenCV","permalink":"http://yoursite.com/tags/OpenCV/"}]},{"title":"Simple MarkDown Note","slug":"MarkDown Note","date":"2018-05-21T08:52:22.000Z","updated":"2018-07-23T02:00:05.214Z","comments":true,"path":"2018/05/21/MarkDown Note/","link":"","permalink":"http://yoursite.com/2018/05/21/MarkDown Note/","excerpt":"","text":"分级标题# 主标题## 二级标题### 三级标题 ...###### 六级标题 #与标题内容之间要有一个空格 列表无序列表- list1 - list2 + list3 + sublist1 + sublist2 + list4 list1 list2 list3 sublist1 sublist2 list4 有序列表1. first 1. 1.1 2. 1.2 2. second 3. third 4. fourth first 1.1 1.2 second third fourth 链接与图片插入链接[显示文本](链接地址)AgtWiki 插入图片![](图片链接地址)具体的图片链接地址需要上传到图床上后获得 代码块1. 三引号+编程语言名称 效果： 内容:import tensorflow as tftf.session() 2. Tab缩进法直接将一段代码全选然后tab缩进 bool DBManager::createConnection()&#123; QSqlDatabase db = QSqlDatabase::addDatabase(\"QSQLITE\"); db.setDatabaseName(DB_NAME); // this version of SQLite is unable to encrypt // so the following two lines are useless db.setUserName(\"sqlite3\"); db.setPassword(\"sqlite\"); if (!db.open()) &#123; qDebug()&lt;&lt;\"SQLite didn't want to work : \"&lt;&lt;db.lastError().text(); return false; &#125; qDebug()&lt;&lt;\"Local database loaded!\"; return true;&#125; 2. 行内代码块在行内使用两个 ` 号 `print(“i am a single line code”)` 效果：print(&quot;i am a single line code&quot;) 粗体和斜体**粗体文字!（用两个星号包含）** 粗体文字! *斜体文字(用一个星号包含)* If you lost the powerful urge to learn, try to regain it 引用&gt; as the history goes ... some man will be immortal 效果： as the history goes …some man will be immortal 表格| Tables | Are | Cool |Test || ------------- |:-------------:| -----:|:--- || col 3 is | right-aligned | $1600 |true || col 2 is | centered | $12 |false|| zebra stripes | are neat | $1 |true | 效果： Tables Are Cool Test col 3 is right-aligned $1600 true col 2 is centered $12 false zebra stripes are neat $1 true","categories":[{"name":"Tools","slug":"Tools","permalink":"http://yoursite.com/categories/Tools/"}],"tags":[{"name":"MarkDown","slug":"MarkDown","permalink":"http://yoursite.com/tags/MarkDown/"}]}]}